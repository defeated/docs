---
import { CollectionEntry, getCollection } from 'astro:content';
import { getSlugWithoutLang } from '~/util';
import languages from '../../i18n/languages';
import { groupPagesByLang } from '../../util/groupPagesByLang';

export async function getStaticPaths() {
	const allPages = await getCollection('docs');
	const routes = allPages.map((page) => ({
		params: {
			lang: page.slug.slice(0, 2),
			slug: getSlugWithoutLang(page.slug),
		},
		props: page,
	}));
	console.log(routes[0].params);

	// Handle fallbacks to english for langs without translations
	const fallbacks = [];
	const pagesByLang = groupPagesByLang(allPages);
	for (const lang of Object.keys(languages)) {
		if (lang === 'en') continue;

		for (const englishPage of pagesByLang.en) {
			const slugWithoutLang = getSlugWithoutLang(englishPage.slug);
			const doesNotNeedFallback = pagesByLang[lang]?.some((p) => p.slug.endsWith(slugWithoutLang));
			if (doesNotNeedFallback) continue;
			fallbacks.push({ params: { lang, slug: slugWithoutLang }, props: englishPage });
		}
	}
	return routes.concat(fallbacks);
}

type Props = CollectionEntry<'docs'>;

const { Content } = await Astro.props.render();
---

<h1>hey!</h1>
<Content />
